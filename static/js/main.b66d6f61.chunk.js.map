{"version":3,"sources":["components/watchlistitem.js","components/Nav.js","components/Login/Login.js","components/SignUp/Signup.js","components/movieSlider.js","components/watchListBtn.js","components/loader.js","components/moviecover.js","components/form.js","components/movieCatalogue.js","components/mainContent.js","components/movieDetail.js","App.js","index.js"],"names":["WatchListItem","watchList","setWatchList","height","className","style","maxHeight","map","listItem","to","movie","id","src","poster_path","alt","title","minValue","maxValue","value","vote_average","text","styles","buildStyles","strokeLinecap","textSize","pathColor","textColor","trailColor","popularity","release_date","onClick","filter","wl","Nav","useState","setHeight","length","Login","type","placeholder","Signup","MovieSlider","movies","arrows","infinite","autoplay","variableWidth","autoplaySpeed","speed","slidesToScroll","toFixed","overview","WatchListBtn","useEffect","localStorage","setItem","JSON","stringify","exist","addToWatchList","Loader","MovieCover","moviesCover","setMoviesCover","loader","setLoader","API_KEY","a","fetch","response","json","data","console","log","results","fetchMovies","setTimeout","settings","dots","slidesToShow","appendDots","customPaging","i","responsive","breakpoint","backgroundImage","backdrop_path","original_title","Form","setYear","setCategory","movieSearch","setMovieSearch","query","setQuery","yearArray","setYearArray","thisYear","Date","getFullYear","years","push","addYears","getMoviesByQuery","onChange","e","target","substring","year","Math","random","MovieCatalogue","setMovies","page","setPage","allPages","setAllPAges","category","isMounted","useRef","total_pages","current","fetchMoviesByCategory","pageCount","initialPage","marginPagesDisplayed","pageRangeDisplayed","previousLabel","nextLabel","containerClassName","pageClassName","activeClassName","previousClassName","nextClassName","disabledClassName","breakClassName","onPageChange","selected","MainContent","MovieDetail","match","genres","setMovie","setMovieTrailer","movieVideos","setMovieVideos","actors","setActors","similarMovies","setSimilarMovies","url","setUrl","params","trailer","video","key","cast","slice","fetchMovieTrailer","fetchActors","fetchSimilarMovies","budget","genre","name","viewBox","preserveAspectRatio","fill","points","actor","profile_path","original_name","character","index","active","document","querySelector","classList","remove","add","getAttribute","handleUrlUpdate","App","getItem","parse","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b66d6f61.chunk.js","sourcesContent":["import React from 'react';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport { Link } from 'react-router-dom';\n\nfunction WatchListItem({ watchList, setWatchList, height }) {\n\n    function deleteFromWatchList(movie) {\n        setWatchList(watchList.filter((wl) => wl.movie.id !== movie.id));\n    }\n\n    return (\n        <div className=\"list\" style={{ maxHeight: `${height}px` }}>\n            {\n                watchList.map((listItem) => (\n                    <div key={listItem.movie.id} className=\"list-container\">\n                        <Link to={`/movie/${listItem.movie.id}`} className=\"list-item\">\n                            <img src={`http://image.tmdb.org/t/p/w200/${listItem.movie.poster_path}`} alt={listItem.movie.title} />\n                            <div className=\"item-detail\">\n                                <CircularProgressbar\n                                    className=\"vote\"\n                                    minValue=\"0\"\n                                    maxValue=\"10\"\n                                    value={listItem.movie.vote_average}\n                                    text={listItem.movie.vote_average === 0 ? \"0\" : listItem.movie.vote_average}\n                                    styles={buildStyles({\n                                        strokeLinecap: 'round',\n                                        textSize: '35px',\n                                        pathColor: 'white',\n                                        textColor: 'white',\n                                        trailColor: '#29323c',\n                                    })}\n                                />\n                                <div className=\"item-text\">\n                                    <span className=\"title\">{listItem.movie.title}</span>\n                                    <span className=\"info\">\n                                        <i className=\"fas fa-fire\"></i>\n                                        <span>{listItem.movie.popularity}</span>\n                                    </span>\n                                    <span className=\"info\">\n                                        <i className=\"fas fa-calendar-day\"></i>\n                                        <span>{listItem.movie.release_date}</span>\n                                    </span>\n                                </div>\n                            </div>\n                        </Link>\n                        <i onClick={() => deleteFromWatchList(listItem.movie)} className=\"fas fa-trash-alt trash\"></i>\n                        <div className=\"line\"></div>\n                    </div>\n                ))\n            }\n        </div>\n    );\n}\n\nexport default WatchListItem;","import React,{useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport WatchListItem from './watchlistitem';\n\nfunction Nav({watchList,setWatchList}){\n\n    const [height,setHeight] = useState(0);\n\n    function toggleHeight(){\n        if(height === 0)\n            setHeight(400);\n        else\n            setHeight(0);\n    }\n\n    return(\n        <div className=\"nav\">\n\n            <div className=\"main-nav\">\n                <div className=\"nav-logo\">\n                    <Link to='/'>\n                    <i className=\"fas fa-film\"></i>\n                    <span>Let's Watch</span>\n                    </Link>\n                    \n                </div>\n                <ul>\n                    <Link to='/Signup'>\n                    <li className='sign-up'> Sign Up</li>       \n                    </Link>\n             \n                <Link to='/login'>\n                <li className='sign-up'> Log In</li>\n                </Link>\n                \n                    <li className=\"watch-list\">\n                        <i onClick={toggleHeight} className=\"fas fa-tv\"></i>\n                        {watchList.length === 0 ? \n                            \"\" \n                            :\n                            <span className=\"watch-list-length\">{watchList.length}</span>\n                        }\n                        <WatchListItem watchList={watchList} setWatchList={setWatchList} height={height}/>\n                    </li>\n                    \n                </ul>\n            </div>\n\n            <div className=\"sub-nav\">\n                <p>WATCH ALL KIND OF MOVIES FREE . ENJOY IT !</p>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default Nav;","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport './login.css';\r\n\r\nconst Login = () => {\r\n  \r\n\r\n  return (\r\n    <div className=\"login\">\r\n     \r\n      <div className=\"container\">\r\n\r\n        <form>\r\n          <h1>Sign In</h1>\r\n          <input type=\"email\" placeholder=\"Email or phone number\" />\r\n          <input type=\"password\" placeholder=\"Password\" />\r\n          <button className=\"loginButton\">Sign In</button>\r\n          <span>\r\n            New to Netflix?\r\n            <Link to='/signup'>\r\n            <b>Sign up now.</b>\r\n            </Link>\r\n          \r\n          </span>\r\n          <small>\r\n            This page is protected by Google reCAPTCHA to ensure you're not a\r\n            bot. <b>Learn more</b>.\r\n          </small>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport { Link  } from 'react-router-dom';\r\n\r\n\r\nconst Signup = () => {\r\n  return (\r\n    <div className=\"login\">\r\n     \r\n    <div className=\"container\">\r\n      <form  >\r\n        <h1>Sign Up</h1>\r\n        <input   type=\"email\" placeholder=\"Email or phone number\" />\r\n        <input   type=\"password\" placeholder=\"Password\" />\r\n        <button className=\"loginButton\">Sign Up</button>\r\n        <span>\r\n          already have an account? \r\n          <Link to='/login'>\r\n          <b>Sign In now.</b>\r\n          </Link> \r\n        </span>\r\n        <small>\r\n          This page is protected by Google reCAPTCHA to ensure you're not a\r\n          bot. <b>Learn more</b>.\r\n        </small>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Signup","import React from 'react';\nimport Slider from \"react-slick\";\nimport {Link} from 'react-router-dom'; \n\nfunction MovieSlider({movies,title}) {\n\n    var settings = {\n        arrows:false,\n        infinite: true,\n        autoplay:true,\n        variableWidth: true,\n        autoplaySpeed:2000,\n        speed: 500,\n        slidesToScroll: 1,\n      };\n\n    return (\n        <div className=\"topRated-slider\">\n            <h1 className=\"slider-title\">{title}</h1>\n            <Slider {...settings} >\n            {\n                movies.map(movie => (\n                    <Link to={`/movie/${movie.id}`} key={movie.id}>    \n                        <div className=\"slider-item\">\n                            <img src={`http://image.tmdb.org/t/p/w200/${movie.poster_path}`} alt={movie.title} />\n                            <div className=\"item-detail\">\n                                <div className=\"item-vote\">\n                                    <p>{movie.vote_average.toFixed(2)}</p>\n                                </div>\n                                <div className=\"item-desc\">\n                                  <h5>{movie.title}</h5>\n                                    <p>{movie.overview}</p> \n                                </div>\n                            </div>\n                        </div>\n                    </Link>    \n                ))\n            }\n            </Slider>\n        </div>\n    );\n}\n\nexport default MovieSlider;","import React, { useEffect } from 'react';\n\nfunction WatchListBtn({ watchList, setWatchList, movie }) {\n\n  useEffect(() => {\n    function saveWatchListLocal() {\n      localStorage.setItem('watchList', JSON.stringify(watchList));\n    }\n    \n    saveWatchListLocal();\n  }, [watchList]);\n\n  function addToWatchList(movie) {\n    var exist = false;\n\n    //check if the movie ezist in the list\n    if (watchList.length > 0) {\n      watchList.map(listItem => {\n        if (listItem.movie.id === movie.id)\n          return exist = true;\n        else\n          return exist = false;\n      });\n    }\n    else\n      setWatchList([...watchList, { movie }]);\n\n    //add the movie if it doesnt exist to the list\n    if (!exist) {\n      setWatchList([...watchList, { movie }]);\n    }\n  }\n\n  return (\n    <div className=\"watchListBtn\">\n      <button onClick={() => addToWatchList(movie)}><i className=\"fas fa-tv\"></i></button>\n    </div>\n  )\n}\n\nexport default WatchListBtn;","import React from 'react';\n\nfunction Loader() {\n    return (\n        <div className=\"loader\">\n            <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n        </div>\n    )\n}\n\nexport default Loader;","import React, { useState, useEffect } from 'react';\nimport Slider from \"react-slick\";\nimport { Link } from 'react-router-dom';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport WatchListBtn from './watchListBtn';\nimport Loader from './loader';\n\nfunction MovieCover({ watchList, setWatchList }) {\n\n  const [moviesCover, setMoviesCover] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  const API_KEY = 'f8ca530fef8bf5e27cde15d12f27d9ae';\n  // const API_KEY = '443a4596b85914edb9a1a8e80c7456c3';\n\n  useEffect(() => {\n    fetchMovies();\n\n    //loader\n    setLoader(true);\n    setTimeout(() => {\n      setLoader(false);\n    }, 1000);\n  }, []);\n\n  async function fetchMovies() {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}`);\n    const data = await response.json();\n    console.log(data)\n    setMoviesCover(data.results);\n  }\n\n  var settings = {\n    arrows: false,\n    dots: true,\n    infinite: true,\n    autoplay: true,\n    speed: 2000,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    appendDots: dots => <ul>{dots}</ul>,\n    customPaging: i => (\n      <div className=\"custom-dot\">\n        <i className=\"fas fa-circle\"></i>\n      </div>\n    ),\n    responsive: [\n      {\n        breakpoint: 650,\n        settings: {\n          dots: false\n        }\n      }\n    ],\n  };\n\n  return (\n    <div >\n      {\n        loader ?\n          <Loader />\n          :\n          <Slider {...settings}>\n            {\n              moviesCover.map(movie => (\n                <div className=\"main-slider-cover\" key={movie.id}>\n                  <Link to={`/movie/${movie.id}`}>\n                    <div className=\"slider-cover\" style={{ backgroundImage: `linear-gradient(to right, #29323c 0%, #4855630c 100%), url(http://image.tmdb.org/t/p/original/${movie.backdrop_path})` }}>\n                      <div className=\"slider-cover-detail\">\n                        <div className=\"atwl\">\n                          <CircularProgressbar\n                            minValue=\"0\"\n                            maxValue=\"10\"\n                            value={movie.vote_average}\n                            text={movie.vote_average === 0 ? \"0\" : movie.vote_average}\n                            styles={buildStyles({\n                              strokeLinecap: 'round',\n                              textSize: '30px',\n                              pathColor: 'white',\n                              textColor: 'white',\n                              trailColor: '#485563',\n                            })}\n                          />\n\n                        </div>\n                        <div>\n                          <h3>{movie.title}<span className=\"original-title\">{movie.title !== movie.original_title ? `( ${movie.original_title} )` : \"\"}</span></h3>\n                          <p className=\"release_date\">{movie.release_date}</p>\n                          <p className=\"overview\">{movie.overview}</p>\n                        </div>\n                      </div>\n                    </div >\n                  </Link >\n                  <div className=\"wlbtn\">\n                    <WatchListBtn watchList={watchList} setWatchList={setWatchList} movie={movie} />\n                  </div>\n\n                </div>\n\n              ))\n            }\n          </Slider >\n      }\n\n    </div >\n  );\n}\n\nexport default MovieCover;\n","import React,{useState,useEffect} from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Form({setYear,setCategory}){\n\n    const [movieSearch, setMovieSearch] = useState([]);    \n    const [query, setQuery] = useState(\"\");    \n    const [yearArray,setYearArray] = useState([]);\n    // const API_KEY = '443a4596b85914edb9a1a8e80c7456c3';\n    const API_KEY = 'f8ca530fef8bf5e27cde15d12f27d9ae';\n\n    useEffect( () => {\n        addYears();\n    }, []);\n\n    useEffect( () => {\n        getMoviesByQuery();\n    }, [query]);\n    \n    async function getMoviesByQuery(){\n        if(query.length >= 2){\n            const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`); \n            const data = await response.json();\n            setMovieSearch(data.results);\n        }\n        else\n            setMovieSearch([]);\n    }\n\n    function updateQuery(e){\n        setQuery(e.target.value);\n    }\n\n    function addYears(){\n        var thisYear = new Date().getFullYear();\n        var years = [];\n\n        for(var i = thisYear ; i >= 2000 ; i--){\n            years.push(i);\n        }\n        setYearArray(years);\n    }\n\n    return(\n        <div className=\"search\">\n\n            <div className=\"search-bar\">\n                <input type=\"text\" id=\"search\" value={query} onChange={updateQuery}/>\n                <i className=\"fas fa-search\"></i>\n                <div className=\"search-list\">\n                    {\n                        movieSearch.map( movie => (\n                            <div key={movie.id} className=\"search-item\">\n                                <img src={`http://image.tmdb.org/t/p/w200/${movie.poster_path}`} alt={movie.title} />\n                                <div className=\"search-detail\">\n                                    <Link to={`/movie/${movie.id}`}>\n                                        <p className=\"title\">{movie.title}</p>\n                                    </Link>\n                                    <p className=\"overview\">{movie.overview.substring(0,100)}</p> \n                                </div>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n\n            <div className=\"search-select\">\n                <div className=\"select\">\n                    <select onChange={ (e) => {setCategory(e.target.value)} }>\n                        <option value=\"popular\">Popular</option>\n                        <option value=\"upcoming\">Upcomming</option>\n                        <option value=\"top_rated\">TopRated</option>\n                        <option value=\"now_playing\">Now Playing</option>\n                    </select>\n                    <i className=\"fas fa-box\"></i>\n                </div>\n                \n                <div className=\"select\">\n                    <select onChange={ (e) => {setYear(e.target.value)} }>                        \n                        {yearArray.map( year => (\n                            <option key={Math.random() * 1000} value={year}>{year}</option>\n                        ))}\n                    </select>\n                    <i className=\"fas fa-calendar-day\"></i>\n                </div>\n\n            </div>\n            \n        </div>\n    );\n}\n\nexport default Form;","import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport Form from './form';\nimport Paginate from 'react-paginate';\nimport WatchListBtn from './watchListBtn';\n\nfunction MovieCatalogue({ watchList, setWatchList }) {\n\n    const [movies, setMovies] = useState([]);\n    const [page, setPage] = useState(1);\n    const [year, setYear] = useState(null);\n    const [allPages, setAllPAges] = useState(20);\n    const [category, setCategory] = useState(\"\");\n    const isMounted = useRef(false);\n\n    const API_KEY = 'f8ca530fef8bf5e27cde15d12f27d9ae';\n\n    useEffect(() => {\n        fetchMovies();\n    }, [page, year]);\n\n    useEffect(() => {\n        if (isMounted.current) {\n            fetchMoviesByCategory();\n        } else {\n            isMounted.current = true;\n        }\n    }, [category]);\n\n    async function fetchMovies() {\n        const response = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&page=${page}&primary_release_year=${year}`);\n        const data = await response.json();\n\n        setMovies(data.results);\n        setAllPAges(data.total_pages);\n    }\n\n    async function fetchMoviesByCategory() {\n\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${category}?api_key=${API_KEY}&page=${page}`);\n        const data = await response.json();\n\n        setMovies(data.results);\n        setAllPAges(data.total_pages);\n    }\n\n    function handlePageChange(page) {\n        setPage(page.selected + 1);\n    }\n\n    return (\n        <div className=\"catalogue\">\n            <Form setYear={setYear} setCategory={setCategory} />\n            <div className=\"catalogue-list\">\n                {movies.map(movie => (\n                    <div key={movie.id} className=\"catalogue-item\">\n                        <img src={`http://image.tmdb.org/t/p/w200/${movie.poster_path}`} alt={movie.title} />\n                        <div className=\"catalogue-item-detail\">\n                            <span className=\"title\">{movie.title}</span>\n                            <span className=\"overview\">{movie.overview.substring(0, 100)}</span>\n                            <Link to={`/movie/${movie.id}`}>\n                                <button>Watch now</button>\n                            </Link>\n                        </div>\n                        <div className=\"heart\">\n                            <WatchListBtn watchList={watchList} setWatchList={setWatchList} movie={movie} />\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            <Paginate\n                pageCount={allPages}\n                initialPage={0}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={2}\n                previousLabel={<i className=\"fas fa-angle-left\"></i>}\n                nextLabel={<i className=\"fas fa-angle-right\"></i>}\n                containerClassName={'paginate-container'}\n                pageClassName={'paginate-item'}\n                activeClassName={'paginate-active-item'}\n                previousClassName={'paginate-previous'}\n                nextClassName={'paginate-next'}\n                disabledClassName={'paginate-disabled'}\n                breakClassName={'paginate-break'}\n                onPageChange={handlePageChange}\n            />\n        </div>\n    );\n}\n\nexport default MovieCatalogue;","import React, { useState, useEffect } from 'react';\nimport MovieSlider from './movieSlider';\nimport Moviecover from './moviecover';\nimport MovieCatalogue from './movieCatalogue';\n\n\nfunction MainContent({ watchList, setWatchList }) {\n\n  const [movies, setMovies] = useState([]);\n  // const API_KEY = '443a4596b85914edb9a1a8e80c7456c3';\n  const API_KEY = 'f8ca530fef8bf5e27cde15d12f27d9ae';\n\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  async function fetchMovies() {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=${API_KEY}`);\n    const data = await response.json();\n    setMovies(data.results);\n  }\n\n  return (\n    <div>\n      <Moviecover watchList={watchList} setWatchList={setWatchList} />\n      <MovieSlider movies={movies} title=\"top rated\" />\n      <MovieCatalogue watchList={watchList} setWatchList={setWatchList} />\n    </div>\n  );\n}\n\nexport default MainContent;\n","import React, { useState, useEffect } from 'react';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport { Link } from 'react-router-dom';\nimport MovieSlider from './movieSlider';\nimport ReactPlayer from 'react-player';\nimport Loader from './loader';\n\nfunction MovieDetail({ match }) {\n\n    const [movie, setMovie] = useState({\n        genres: [],\n    });\n    const [movieTrailer, setMovieTrailer] = useState({});\n    const [movieVideos, setMovieVideos] = useState([]);\n    const [actors, setActors] = useState([]);\n    const [similarMovies, setSimilarMovies] = useState([]);\n    const [url, setUrl] = useState(\"\");\n    const [loader, setLoader] = useState(false);\n\n\n    // const API_KEY = '443a4596b85914edb9a1a8e80c7456c3';\n    const API_KEY = 'f8ca530fef8bf5e27cde15d12f27d9ae';\n\n    useEffect(() => {\n        fetchMovies();\n        fetchMovieTrailer();\n        fetchActors();\n        fetchSimilarMovies();\n\n        //loader\n        setLoader(true);\n        setTimeout(() => {\n            setLoader(false);\n        }, 1000);\n\n    }, [match]);\n\n    async function fetchMovies() {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}?api_key=${API_KEY}`);\n        const data = await response.json();\n\n        setMovie(data);\n    }\n\n    async function fetchMovieTrailer() {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}/videos?api_key=${API_KEY}`);\n        const data = await response.json();\n\n        const trailer = data.results.filter((video) => {\n            return video.type === \"Trailer\"\n        });\n\n        setMovieVideos(data.results);\n        setUrl(data.results[0].key);\n        setMovieTrailer(trailer[0]);\n    }\n\n    async function fetchActors() {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}/credits?api_key=${API_KEY}`);\n        const data = await response.json();\n\n\n        setActors(data.cast.slice(0, 6));\n    }\n\n    async function fetchSimilarMovies() {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}/similar?api_key=${API_KEY}`);\n        const data = await response.json();\n\n        setSimilarMovies(data.results);\n    }\n\n    function handleUrlUpdate(e) {\n        const active = document.querySelector('.active');\n        if (active) {\n            active.classList.remove('active');\n        }\n        e.target.classList.add(\"active\")\n        setUrl(e.target.getAttribute(\"url\"));\n    }\n\n    return (\n        <>\n            {\n                loader ?\n                    <Loader />\n                    :\n                    <div className=\"movie-detail\">\n                        <div className=\"movie-detail-actions\">\n                            <Link to=\"/\" className=\"goback\">\n                                <div >\n                                    <i className=\"fas fa-arrow-alt-circle-left\"></i>\n                                </div>\n                            </Link>\n\n                            <CircularProgressbar\n                                className=\"circuralBar\"\n                                minValue=\"0\"\n                                maxValue=\"10\"\n                                value={movie.vote_average}\n                                text={movie.vote_average === 0 ? \"0\" : movie.vote_average}\n                                styles={buildStyles({\n                                    strokeLinecap: 'round',\n                                    textSize: '30px',\n                                    pathColor: 'white',\n                                    textColor: 'white',\n                                    trailColor: '#485563',\n                                })}\n                            />\n                        </div>\n                        <div className=\"movie-detail-cover\" style={{ backgroundImage: `linear-gradient(to right, #29323c 0%, #4855638c 100%), url(http://image.tmdb.org/t/p/original/${movie.backdrop_path})` }}>\n\n\n                            <div className=\"detail\">\n\n                                <span className=\"title\">{movie.title}</span>\n                                <span className=\"original-title\">{movie.title === movie.original_title ? \"\" : movie.original_title}</span>\n                                <div className=\"line\"></div>\n                                <span className=\"budget\">\n                                    <i className=\"fas fa-dollar-sign icon\"></i>\n                                    {movie.budget === 0 ? \"Unknown\" : movie.budget}\n                                </span>\n                                <span className=\"genres\">\n                                    <i className=\"fas fa-heart icon\"></i>\n                                    {\n                                        movie.genres.map(genre => (\n                                            <span key={genre.id} className=\"genre\">{genre.name}</span>\n                                        ))\n                                    }\n                                </span>\n                                <span className=\"release_date\">{movie.release_date}</span>\n                                <span className=\"overview\">{movie.overview}</span>\n                            </div>\n\n                            <svg className=\"triangle\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\" fill=\"#485563\" >\n                                <polygon points=\"100,0 0,100 100,100\" />\n                            </svg>\n                        </div>\n\n                        <div className=\"actors-container\">\n                            <h1>Actors</h1>\n                            <div className=\"actors\">\n                                {\n                                    actors.map(actor => (\n                                        <div key={actor.id} className=\"actor\">\n                                            <div className=\"actor-image\" style={{ backgroundImage: `url(http://image.tmdb.org/t/p/w185/${actor.profile_path})` }}></div>\n                                            <div>\n                                                <div className=\"actor-detail\">\n                                                    <span>Original Name</span>\n                                                    <p>{actor.original_name}</p>\n                                                </div>\n                                                <div className=\"actor-detail\">\n                                                    <span>Character Name</span>\n                                                    <p>{actor.character}</p>\n                                                </div>\n                                                <div className=\"actor-detail\">\n                                                    <span>Popularity</span>\n                                                    <p>{actor.popularity}</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))\n                                }\n                            </div>\n                        </div>\n\n                        <div className=\"player\">\n                            <div className='player-wrapper'>\n                                <ReactPlayer\n                                    className='react-player'\n                                    url={`https://www.youtube.com/watch?v=${url}`}\n                                />\n                                <div className=\"player-btns\">\n                                    {\n                                        movieVideos.map((video, index) => (\n                                            <div key={video.id} url={video.key} className={`player-btn ${index === 0 ? 'active' : ''}`} onClick={(e) => { handleUrlUpdate(e) }}>\n                                                <span>{video.type}</span> - {video.name}\n                                            </div>\n                                        ))\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                        <MovieSlider movies={similarMovies} title=\"Similar Movies\" />\n                    </div >\n            }\n        </>\n    );\n}\n\nexport default MovieDetail;\n","import React,{useState,useEffect} from 'react';\nimport {BrowserRouter as Router, Switch ,Route} from 'react-router-dom';\nimport './App.css';\nimport Nav from './components/Nav';\nimport Login from './components/Login/Login';\nimport Signup from './components/SignUp/Signup';\nimport MainContent from './components/mainContent';\nimport MovieDetail from './components/movieDetail';\n\nfunction App() {\n\n  const [watchList,setWatchList] = useState([]);\n  \n  useEffect(() => {\n        getWatchListLocal();\n  }, []);\n\n  function getWatchListLocal(){\n      if (localStorage.getItem('watchList') !== null) {\n          setWatchList(JSON.parse(localStorage.getItem('watchList')));\n      }\n  }\n\n  return (\n      <div className=\"App\">\n          <Router>\n          <Nav watchList={watchList} setWatchList={setWatchList} />\n            <Switch>\n              <Route path=\"/movie/:id\" component={MovieDetail} />\n              <Route path='/login' component={Login}/>\n              <Route path='/signup' component={Signup}/>\n               {/* <Login/> */}\n              <MainContent watchList={watchList} setWatchList={setWatchList} />\n            </Switch>\n          </Router>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}